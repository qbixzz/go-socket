before_script:
  - docker login -u $DOCKER_USER -p $DOCKER_PASSWORD $DOCKER_REGISTRY
  - DOCKER_IMAGE="$DOCKER_REGISTRY/dx/vc/${CI_PROJECT_NAME,,}"
  - if [ -z "$CI_COMMIT_TAG" ]; then
      ARG_APP_VERSION="dev";
    else
      ARG_APP_VERSION="$CI_COMMIT_TAG";
    fi

stages:
  - test
  - build
  - delivery
  - cleanup

quality:
  stage: test
  script:
    - sonar-scanner
      -Dsonar.qualitygate.wait=true
      -Dsonar.sources=src
      -Dsonar.exclusions=**/*_test.go,src/cmd/**,src/protobuf/**,src/ptotoc/**,deployment/**
      -Dsonar.host.url=$SONAR_HOST
      -Dsonar.login=$SONAR_TOKEN
      -Dsonar.projectKey=CDT-DX-VC-$CI_PROJECT_NAME
      -Dsonar.projectName="CDT / DX / VC / $CI_PROJECT_NAME"
      -Dsonar.projectVersion=$CI_PIPELINE_ID
      -Dsonar.analysis.mode=publish
  tags:
    - docker
  when: manual

build-dev:
  stage: build
  script:
    - docker build --build-arg VERSION=$ARG_APP_VERSION --build-arg HSM_ENV=dev -t $DOCKER_IMAGE:$ARG_APP_VERSION .
  only:
    - develop
  tags:
    - docker

delivery-dev:
  stage: delivery
  script:
    - docker push "$DOCKER_IMAGE:$ARG_APP_VERSION"
  only:
    - develop
  tags:
    - docker

build:
  stage: build
  script:
    - docker build --build-arg VERSION=$ARG_APP_VERSION --build-arg HSM_ENV=prod -t $DOCKER_IMAGE:$ARG_APP_VERSION .
  only:
    - tags
  tags:
    - docker

delivery:
  stage: delivery
  script:
    - docker tag "$DOCKER_IMAGE:$ARG_APP_VERSION" "$DOCKER_IMAGE:latest"
    - docker push "$DOCKER_IMAGE:$ARG_APP_VERSION"
    - docker push "$DOCKER_IMAGE:latest"
  only:
    - tags
  tags:
    - docker

cleanup:
  stage: cleanup
  script:
    - docker rmi -f "$DOCKER_IMAGE:$ARG_APP_VERSION" "$DOCKER_IMAGE:latest"
  tags:
    - docker
  when: always
